name: Extract all .car files with Asset Catalog Tinkerer

on:
  workflow_dispatch:

jobs:
  extract-all:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Asset Catalog Tinkerer (Homebrew cask)
        run: |
          # Ensure Homebrew is set up on the mac runner and install the cask.
          # (Homebrew is present on GitHub mac runners.)
          brew update
          brew install --cask asset-catalog-tinkerer || brew reinstall --cask asset-catalog-tinkerer
          ls -la /Applications | grep -i "Asset Catalog"

      - name: Show act CLI version / help (for debugging)
        run: |
          ACT_BIN="/Applications/Asset Catalog Tinkerer.app/Contents/MacOS/act"
          if [ -x "$ACT_BIN" ]; then
            echo "act binary found: $ACT_BIN"
            "$ACT_BIN" --version || true
            echo "---- act --help ----"
            "$ACT_BIN" --help || true
            echo "---- end help ----"
          else
            echo "act binary not found; listing app bundle contents:"
            ls -la "/Applications/Asset Catalog Tinkerer.app/Contents/MacOS" || true
            exit 1
          fi

      - name: Extract every Assets/*.car to Assets/<basename>/
        env:
          ACT_BIN: /Applications/Asset\ Catalog\ Tinkerer.app/Contents/MacOS/act
        run: |
          set -euo pipefail
          mkdir -p extracted_tmp
          shopt -s nullglob
          found=0

          for car in Assets/*.car; do
            found=1
            base="$(basename "$car" .car)"
            out="Assets/${base}"
            mkdir -p "$out"
            echo "==== Extracting $car -> $out ===="

            # try a few possible act syntaxes (safe, non-destructive), stop on first success
            # different versions expose different subcommands; we attempt several variants:
            if "$ACT_BIN" export --help > /dev/null 2>&1; then
              echo "Trying: act export"
              "$ACT_BIN" export "$car" -o "$out" || true
            fi

            if [ -z "$(ls -A "$out" 2>/dev/null || true)" ] ; then
              if "$ACT_BIN" extract --help > /dev/null 2>&1; then
                echo "Trying: act extract"
                "$ACT_BIN" extract "$car" "$out" || true
              fi
            fi

            if [ -z "$(ls -A "$out" 2>/dev/null || true)" ] ; then
              # older/newer variants: some versions accept: act export <car> <dir>  or act <car> --export <dir>
              echo "Trying fallback invocations"
              "$ACT_BIN" "$car" --export "$out" || true
              "$ACT_BIN" "$car" export "$out" || true
              "$ACT_BIN" export "$car" "$out" || true
            fi

            # As a last-resort, print the act help so you can inspect the exact usage in the run logs
            if [ -z "$(ls -A "$out" 2>/dev/null || true)" ] ; then
              echo "Extraction created no files for $car. Dumping act --help to logs for debugging:"
              "$ACT_BIN" --help || true
            else
              echo "Files extracted to $out:"
              ls -la "$out" | sed -n '1,200p' || true
            fi
          done

          if [ "$found" -eq 0 ]; then
            echo "No .car files found in Assets/. Make sure they are committed to the repo at path Assets/*.car"
            # don't fail the job â€” user might want to run later after uploading .car files
          fi

      - name: Upload extracted folders as artifact
        uses: actions/upload-artifact@v4
        with:
          name: extracted-assets
          path: |
            Assets/*
            extracted_tmp
